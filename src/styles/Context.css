/* Base definition */
.fluent.menu,
.fluent.menu *,
.fluent.menu *::before,
.fluent.menu *::after {
  transition: 0.2s ease-out;
}

.fluent.menu {
  transition:
    0.2s ease-out,
    0s padding;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  touch-action: none;
  box-sizing: border-box;
}

.fluent.menu .menubody {
  display: flex;
  flex-direction: column;
  width: fit-content;
  min-width: 55vw;
  margin-top: -1em;
  white-space: nowrap;
}

.fluent.menu .menubody .menuoption {
  display: flex;
  width: 100%;
}

.fluent.menu .menuoption * { /* No .menubody (apply to all menuoptions) */
  padding: 0.2em;
  background: var(--background-color);
  backdrop-filter: blur(2px);
}

.fluent.menu .menuoption .icon { /* No .menubody (apply to all menuoptions) */
  border-radius: 50%;
}

.fluent.menu .menubody .menuoption .tag {
  display: flex;
  position: relative;
  align-items: center;
  padding: 0.2em 0.5em;
  overflow: hidden;
}
.fluent.menu[data-side=left] .menubody .menuoption .tag {
  justify-content: start;
}
.fluent.menu[data-side=right] .menubody .menuoption .tag {
  justify-content: end;
}
.fluent.menu .menubody .menuoption:nth-child(2) .tag {
  border-radius: 1em 1em 0 0;
}
.fluent.menu .menubody .menuoption:last-child .tag {
  border-radius: 0 0 1em 1em;
}

.fluent.menu .menubody .menuoption .tag::before {
  content: '';
  position: absolute;
  top: 0;
  width: 0%;
  height: 100%;
  background: var(--highlight-color);
  opacity: 0;
  z-index: -1;
}

.fluent.menu .menubody .menudivider {
  align-self: center;
  width: 80%;
  height: 1px;
  margin: 0.2em 0;
  background: lightgray;
}

.fluent.menu .menuoption.disable {
  position: fixed;
  bottom: 0;
  margin: 2%;
}
.fluent.menu .menuoption.disable .icon {
  font-size: 2em;
}
/* Base definition */

/* Initial states */
.fluent.menu[data-theme=light] {
  --background-color: rgba(220, 220, 220, 0.9);
  --highlight-color: rgba(91, 192, 255, 0.8);
  color: black;
}
.fluent.menu[data-theme=dark] {
  --background-color: rgba(80, 80, 80, 0.9);
  --highlight-color: rgba(30, 167, 253, 0.8);
  color: white;
}

.fluent.menu[data-side=left] .menubody {
  float: left;
  align-items: flex-start;
  margin-left: 2em;
}
.fluent.menu[data-side=right] .menubody {
  float: right;
  align-items: flex-end;
  margin-right: 2em;
}

.fluent.menu[data-side=left] .menubody .menuoption {
  flex-direction: row;
}
.fluent.menu[data-side=right] .menubody .menuoption {
  flex-direction: row-reverse;
}

.fluent.menu[data-side=right] .menuoption .tag::before {
  right: 0;
}
.fluent.menu[data-side=left] .menuoption .tag::before {
  left: 0;
}

.fluent.menu[data-side=left] .menuoption.disable {
  left: 0;
}
.fluent.menu[data-side=right] .menuoption.disable {
  right: 0;
}
/* Initial states */

/* Working states */
.fluent.menu[data-active=false] {
  backdrop-filter: blur(0px);
}
.fluent.menu[data-active=true] {
  backdrop-filter: blur(5px);
  pointer-events: all;
}

.fluent.menu[data-active=false] .menubody {
  opacity: 0;
  clip-path: polygon(0 0, 100% 0, 100% 0, 0 0);
}
.fluent.menu[data-active=true] .menubody {
  opacity: 1;
  clip-path: polygon(0 0, 100% 0, 100% 100%, 0% 100%);
}

.fluent.menu[data-active=false] .menubody .menuoption {
  margin: 0;
}
.fluent.menu[data-active=true] .menubody .menuoption {
  margin: 0.1em 0;
}

.fluent.menu[data-active=false] .menubody .menuoption .tag {
  flex-grow: 0;
  width: 0%;
}
.fluent.menu[data-active=true] .menubody .menuoption .icon {
  margin: 0 0.5em;
}

.fluent.menu[data-active=true] .menubody .menuoption .tag {
  flex-grow: 1;
  width: 100%;
}
.fluent.menu .menubody .menuoption.hovering .tag::before {
  width: 100%;
  opacity: 1;
}

.fluent.menu[data-active=false] .menuoption.disable {
  opacity: 0;
}
.fluent.menu[data-active=true] .menuoption.disable {
  opacity: 1;
}
/* Working states */

@supports selector(:has(div)) {
  .fluent.menu .menuoption.blob .icon::before {
    animation: blob 0.2s ease-in-out normal forwards;
  }

  .fluent.menu .menuoption .icon::before {
    content: '';
    transition: 0.1s ease-in-out;
    position: absolute;
    display: block;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background: var(--highlight-color);
    opacity: 0;
    z-index: -1;
  }

  .fluent.menu .menuoption:has(~ .menuoption.hovering) .icon::before { /* Above */
    transform: translateY(100%);
    opacity: 0;
  }
  .fluent.menu .menuoption.hovering .icon::before {
    transform: translateY(0%);
    opacity: 1;
  }
  .fluent.menu .menuoption.hovering ~ .menuoption .icon::before { /* Below */
    transform: translateY(-100%);
    opacity: 0;
  }

  @keyframes blob {
    0% {
      scale: 1 1;
    }
    50% {
      scale: 1 1.2;
    }
    100% {
      scale: 1 1;
    }
  }
}
@supports not selector(:has(div)) {
  .fluent.menu .menuoption.hovering .icon {
    background: var(--highlight-color);
  }
}
